board = {
    1: ' ', 2: ' ', 3: ' ',
    4: ' ', 5: ' ', 6: ' ',
    7: ' ', 8: ' ', 9: ' '
}

player = 'O'  # human
bot = 'X'     # computer


def printBoard(board):
    print(board[1] + '|' + board[2] + '|' + board[3])
    print('-+-+-')
    print(board[4] + '|' + board[5] + '|' + board[6])
    print('-+-+-')
    print(board[7] + '|' + board[8] + '|' + board[9])
    print('\n')


def spaceFree(pos):
    return board[pos] == ' '


def checkWin():
    # Winning combinations
    combos = [
        (1, 2, 3), (4, 5, 6), (7, 8, 9),  # rows
        (1, 4, 7), (2, 5, 8), (3, 6, 9),  # columns
        (1, 5, 9), (3, 5, 7)              # diagonals
    ]
    for combo in combos:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] != ' ':
            return True
    return False


def checkMoveForWin(move):
    combos = [
        (1, 2, 3), (4, 5, 6), (7, 8, 9),
        (1, 4, 7), (2, 5, 8), (3, 6, 9),
        (1, 5, 9), (3, 5, 7)
    ]
    for combo in combos:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] == move:
            return True
    return False


def checkDraw():
    for key in board.keys():
        if board[key] == ' ':
            return False
    return True


def insertLetter(letter, position):
    if spaceFree(position):
        board[position] = letter
        printBoard(board)

        if checkWin():
            if letter == bot:
                print('Bot wins!')
            else:
                print('You win!')
            return True  # Game over

        if checkDraw():
            print('Draw!')
            return True  # Game over

        return False  # Game continues

    else:
        print('Position taken, please pick a different position.')
        return False


def playerMove():
    while True:
        try:
            position = int(input('Enter position for O (1-9): '))
            if position in board.keys() and spaceFree(position):
                game_over = insertLetter(player, position)
                return game_over
            else:
                print('Invalid position or space taken.')
        except ValueError:
            print('Please enter a valid number between 1 and 9.')


def compMove():
    bestScore = -1000
    bestMove = 0

    for key in board.keys():
        if board[key] == ' ':
            board[key] = bot
            score = minimax(False)
            board[key] = ' '
            if score > bestScore:
                bestScore = score
                bestMove = key

    game_over = insertLetter(bot, bestMove)
    return game_over


def minimax(isMaximizing):
    if checkMoveForWin(bot):
        return 1
    elif checkMoveForWin(player):
        return -1
    elif checkDraw():
        return 0

    if isMaximizing:
        bestScore = -1000
        for key in board.keys():
            if board[key] == ' ':
                board[key] = bot
                score = minimax(False)
                board[key] = ' '
                bestScore = max(score, bestScore)
        return bestScore
    else:
        bestScore = 1000
        for key in board.keys():
            if board[key] == ' ':
                board[key] = player
                score = minimax(True)
                board[key] = ' '
                bestScore = min(score, bestScore)
        return bestScore


# Game loop
print("Starting Tic Tac Toe!")
printBoard(board)

while True:
    # Bot move
    if compMove():
        break

    # Player move
    if playerMove():
        break
